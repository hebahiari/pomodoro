{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heba\\\\Desktop\\\\www\\\\pomodoro\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  function calculatePercentage() {\n    if (session && session.label === \"Focusing\") {\n      return (focusDuration * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (focusDuration * 60) * 100;\n    } else if (session && session.label === \"On Break\") {\n      return (breakDuration * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (breakDuration * 60) * 100;\n    } else {}\n  }\n\n  if (session) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", secondsToTime((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration * 60 : breakDuration * 60), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, secondsToTime(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": calculatePercentage() // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: calculatePercentage() + \"%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })))));\n  } else {\n    return \"\";\n  }\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/Heba/Desktop/www/pomodoro/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","session","focusDuration","breakDuration","calculatePercentage","label","timeRemaining","secondsToTime","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,WAAT,CAAqB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAArB,EAA8D;AAE1D,WAASC,mBAAT,GAA+B;AAC3B,QAAIH,OAAO,IAAIA,OAAO,CAACI,KAAR,KAAkB,UAAjC,EAA6C;AAChD,aAAS,CAAEH,aAAa,GAAC,EAAf,IAAmBD,OAAnB,aAAmBA,OAAnB,uBAAmBA,OAAO,CAAEK,aAA5B,CAAD,KAA6CJ,aAAa,GAAC,EAA3D,CAAD,GAAiE,GAAzE;AACI,KAFD,MAEO,IAAID,OAAO,IAAIA,OAAO,CAACI,KAAR,KAAkB,UAAjC,EAA6C;AACtD,aAAY,CAAEF,aAAa,GAAC,EAAf,IAAmBF,OAAnB,aAAmBA,OAAnB,uBAAmBA,OAAO,CAAEK,aAA5B,CAAD,KAA6CH,aAAa,GAAC,EAA3D,CAAD,GAAiE,GAA5E;AACG,KAFM,MAEA,CACV;AACE;;AAEH,MAAIF,OAAJ,EAAa;AACb,wBAAQ,uDACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEI,KADZ,WACwBE,aAAa,CAAC,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAAnB,GAA+BH,aAAa,GAAC,EAA7C,GAAkDC,aAAa,GAAC,EAAjE,CADrC,aAFF,eASE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCI,aAAa,CAACN,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,aAAV,CADd,eATF,CADA,CADI,eAgBN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAeJ,mBAAmB,EALpC,CAKwC;AALxC;AAME,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAEL,mBAAmB,KAAG;AAA/B,OANT,CAM+C;AAN/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADA,CAhBM,CAAR;AA+BH,GAhCG,MAgCI;AACJ,WAAO,EAAP;AACD;AACF;;AAED,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction ProgressBar({session, focusDuration, breakDuration}) {\r\n\r\n    function calculatePercentage() {\r\n        if (session && session.label === \"Focusing\") {\r\n     return ((((focusDuration*60)-session?.timeRemaining)/(focusDuration*60))*100)\r\n        } else if (session && session.label === \"On Break\") {\r\n      return    ((((breakDuration*60)-session?.timeRemaining)/(breakDuration*60))*100)\r\n        } else {\r\n    }\r\n      }\r\n      \r\n    if (session) {\r\n    return (<>\r\n        <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label} for {secondsToTime(session?.label === \"Focusing\"? focusDuration*60 : breakDuration*60 )} minutes\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          {/* <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToTime(session?.timeRemaining)} remaining\r\n          </p> */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {secondsToTime(session?.timeRemaining)} remaining\r\n        </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            aria-valuenow={calculatePercentage()} // TODO: Increase aria-valuenow as elapsed time increases\r\n            style={{ width: calculatePercentage()+\"%\" }} // TODO: Increase width % as elapsed time increases\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>)\r\n}  else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default ProgressBar"]},"metadata":{},"sourceType":"module"}