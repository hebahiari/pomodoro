{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heba\\\\Desktop\\\\www\\\\pomodoro\\\\src\\\\pomodoro\\\\progress.js\";\nimport React from \"react\";\n\nfunction calculatePercentage(session, focusDuration, breakDuration) {\n  if (session && session.label === \"Focusing\") {\n    return (focusDuration * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (focusDuration * 60) * 100;\n  } else if (session && session.label === \"On Break\") {\n    return (breakDuration * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (breakDuration * 60) * 100;\n  } else {}\n}\n\nfunction secondsToTime(time) {\n  let minutes = Math.floor(time / 60);\n  let seconds = time - minutes * 60;\n  seconds = seconds.toString().padStart(2, \"0\");\n  minutes = minutes.toString().padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n\nfunction progress({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  if (session) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", secondsToTime((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration * 60 : breakDuration * 60), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, secondsToTime(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": calculatePercentage(session, focusDuration, breakDuration) // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: calculatePercentage(session, focusDuration, breakDuration) + \"%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })))));\n  } else {\n    return \"\";\n  }\n}\n\nexport default progress;","map":{"version":3,"sources":["C:/Users/Heba/Desktop/www/pomodoro/src/pomodoro/progress.js"],"names":["React","calculatePercentage","session","focusDuration","breakDuration","label","timeRemaining","secondsToTime","time","minutes","Math","floor","seconds","toString","padStart","progress","height","width"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nfunction calculatePercentage(session, focusDuration, breakDuration ) {\r\n    if (session && session.label === \"Focusing\") {\r\n return ((((focusDuration*60)-session?.timeRemaining)/(focusDuration*60))*100)\r\n    } else if (session && session.label === \"On Break\") {\r\n  return    ((((breakDuration*60)-session?.timeRemaining)/(breakDuration*60))*100)\r\n    } else {\r\n}\r\n  }\r\n\r\n  function secondsToTime(time) {\r\n    let minutes = Math.floor(time / 60);\r\n    let seconds = time - minutes * 60;\r\n    seconds = seconds.toString().padStart(2, \"0\");\r\n  minutes = minutes.toString().padStart(2, \"0\");\r\n    return `${minutes}:${seconds}`;\r\n  }\r\n\r\nfunction progress({session, focusDuration, breakDuration}) {\r\n    if (session) {\r\n      return (\r\n        <>\r\n        <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label} for {secondsToTime(session?.label === \"Focusing\"? focusDuration*60 : breakDuration*60 )} minutes\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          {/* <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToTime(session?.timeRemaining)} remaining\r\n          </p> */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {secondsToTime(session?.timeRemaining)} remaining\r\n        </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            aria-valuenow={calculatePercentage(session, focusDuration, breakDuration )} // TODO: Increase aria-valuenow as elapsed time increases\r\n            style={{ width: calculatePercentage(session, focusDuration, breakDuration )+\"%\" }} // TODO: Increase width % as elapsed time increases\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n    );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n\r\n  export default progress;"]},"metadata":{},"sourceType":"module"}